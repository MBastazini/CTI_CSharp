//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CelularCTI.Desktop {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("projetosctiDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class projetosctiDataSet : global::System.Data.DataSet {
        
        private aparelhoDataTable tableaparelho;
        
        private clienteDataTable tablecliente;
        
        private committee_membersDataTable tablecommittee_members;
        
        private fabricanteDataTable tablefabricante;
        
        private matchesDataTable tablematches;
        
        private pedidoDataTable tablepedido;
        
        private penaltiesDataTable tablepenalties;
        
        private playersDataTable tableplayers;
        
        private teamsDataTable tableteams;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public projetosctiDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected projetosctiDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["aparelho"] != null)) {
                    base.Tables.Add(new aparelhoDataTable(ds.Tables["aparelho"]));
                }
                if ((ds.Tables["cliente"] != null)) {
                    base.Tables.Add(new clienteDataTable(ds.Tables["cliente"]));
                }
                if ((ds.Tables["committee_members"] != null)) {
                    base.Tables.Add(new committee_membersDataTable(ds.Tables["committee_members"]));
                }
                if ((ds.Tables["fabricante"] != null)) {
                    base.Tables.Add(new fabricanteDataTable(ds.Tables["fabricante"]));
                }
                if ((ds.Tables["matches"] != null)) {
                    base.Tables.Add(new matchesDataTable(ds.Tables["matches"]));
                }
                if ((ds.Tables["pedido"] != null)) {
                    base.Tables.Add(new pedidoDataTable(ds.Tables["pedido"]));
                }
                if ((ds.Tables["penalties"] != null)) {
                    base.Tables.Add(new penaltiesDataTable(ds.Tables["penalties"]));
                }
                if ((ds.Tables["players"] != null)) {
                    base.Tables.Add(new playersDataTable(ds.Tables["players"]));
                }
                if ((ds.Tables["teams"] != null)) {
                    base.Tables.Add(new teamsDataTable(ds.Tables["teams"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public aparelhoDataTable aparelho {
            get {
                return this.tableaparelho;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public clienteDataTable cliente {
            get {
                return this.tablecliente;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public committee_membersDataTable committee_members {
            get {
                return this.tablecommittee_members;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public fabricanteDataTable fabricante {
            get {
                return this.tablefabricante;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public matchesDataTable matches {
            get {
                return this.tablematches;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public pedidoDataTable pedido {
            get {
                return this.tablepedido;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public penaltiesDataTable penalties {
            get {
                return this.tablepenalties;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public playersDataTable players {
            get {
                return this.tableplayers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public teamsDataTable teams {
            get {
                return this.tableteams;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            projetosctiDataSet cln = ((projetosctiDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["aparelho"] != null)) {
                    base.Tables.Add(new aparelhoDataTable(ds.Tables["aparelho"]));
                }
                if ((ds.Tables["cliente"] != null)) {
                    base.Tables.Add(new clienteDataTable(ds.Tables["cliente"]));
                }
                if ((ds.Tables["committee_members"] != null)) {
                    base.Tables.Add(new committee_membersDataTable(ds.Tables["committee_members"]));
                }
                if ((ds.Tables["fabricante"] != null)) {
                    base.Tables.Add(new fabricanteDataTable(ds.Tables["fabricante"]));
                }
                if ((ds.Tables["matches"] != null)) {
                    base.Tables.Add(new matchesDataTable(ds.Tables["matches"]));
                }
                if ((ds.Tables["pedido"] != null)) {
                    base.Tables.Add(new pedidoDataTable(ds.Tables["pedido"]));
                }
                if ((ds.Tables["penalties"] != null)) {
                    base.Tables.Add(new penaltiesDataTable(ds.Tables["penalties"]));
                }
                if ((ds.Tables["players"] != null)) {
                    base.Tables.Add(new playersDataTable(ds.Tables["players"]));
                }
                if ((ds.Tables["teams"] != null)) {
                    base.Tables.Add(new teamsDataTable(ds.Tables["teams"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableaparelho = ((aparelhoDataTable)(base.Tables["aparelho"]));
            if ((initTable == true)) {
                if ((this.tableaparelho != null)) {
                    this.tableaparelho.InitVars();
                }
            }
            this.tablecliente = ((clienteDataTable)(base.Tables["cliente"]));
            if ((initTable == true)) {
                if ((this.tablecliente != null)) {
                    this.tablecliente.InitVars();
                }
            }
            this.tablecommittee_members = ((committee_membersDataTable)(base.Tables["committee_members"]));
            if ((initTable == true)) {
                if ((this.tablecommittee_members != null)) {
                    this.tablecommittee_members.InitVars();
                }
            }
            this.tablefabricante = ((fabricanteDataTable)(base.Tables["fabricante"]));
            if ((initTable == true)) {
                if ((this.tablefabricante != null)) {
                    this.tablefabricante.InitVars();
                }
            }
            this.tablematches = ((matchesDataTable)(base.Tables["matches"]));
            if ((initTable == true)) {
                if ((this.tablematches != null)) {
                    this.tablematches.InitVars();
                }
            }
            this.tablepedido = ((pedidoDataTable)(base.Tables["pedido"]));
            if ((initTable == true)) {
                if ((this.tablepedido != null)) {
                    this.tablepedido.InitVars();
                }
            }
            this.tablepenalties = ((penaltiesDataTable)(base.Tables["penalties"]));
            if ((initTable == true)) {
                if ((this.tablepenalties != null)) {
                    this.tablepenalties.InitVars();
                }
            }
            this.tableplayers = ((playersDataTable)(base.Tables["players"]));
            if ((initTable == true)) {
                if ((this.tableplayers != null)) {
                    this.tableplayers.InitVars();
                }
            }
            this.tableteams = ((teamsDataTable)(base.Tables["teams"]));
            if ((initTable == true)) {
                if ((this.tableteams != null)) {
                    this.tableteams.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "projetosctiDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/projetosctiDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableaparelho = new aparelhoDataTable();
            base.Tables.Add(this.tableaparelho);
            this.tablecliente = new clienteDataTable();
            base.Tables.Add(this.tablecliente);
            this.tablecommittee_members = new committee_membersDataTable();
            base.Tables.Add(this.tablecommittee_members);
            this.tablefabricante = new fabricanteDataTable();
            base.Tables.Add(this.tablefabricante);
            this.tablematches = new matchesDataTable();
            base.Tables.Add(this.tablematches);
            this.tablepedido = new pedidoDataTable();
            base.Tables.Add(this.tablepedido);
            this.tablepenalties = new penaltiesDataTable();
            base.Tables.Add(this.tablepenalties);
            this.tableplayers = new playersDataTable();
            base.Tables.Add(this.tableplayers);
            this.tableteams = new teamsDataTable();
            base.Tables.Add(this.tableteams);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeaparelho() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializecliente() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializecommittee_members() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializefabricante() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializematches() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializepedido() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializepenalties() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeplayers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeteams() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            projetosctiDataSet ds = new projetosctiDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void aparelhoRowChangeEventHandler(object sender, aparelhoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void clienteRowChangeEventHandler(object sender, clienteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void committee_membersRowChangeEventHandler(object sender, committee_membersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void fabricanteRowChangeEventHandler(object sender, fabricanteRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void matchesRowChangeEventHandler(object sender, matchesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void pedidoRowChangeEventHandler(object sender, pedidoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void penaltiesRowChangeEventHandler(object sender, penaltiesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void playersRowChangeEventHandler(object sender, playersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void teamsRowChangeEventHandler(object sender, teamsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class aparelhoDataTable : global::System.Data.TypedTableBase<aparelhoRow> {
            
            private global::System.Data.DataColumn columnid_aparelho;
            
            private global::System.Data.DataColumn columnid_fabricante;
            
            private global::System.Data.DataColumn columnmodelo;
            
            private global::System.Data.DataColumn columnaltura;
            
            private global::System.Data.DataColumn columnlargura;
            
            private global::System.Data.DataColumn columnespessura;
            
            private global::System.Data.DataColumn columnpeso;
            
            private global::System.Data.DataColumn columnpreco;
            
            private global::System.Data.DataColumn columnquantidade;
            
            private global::System.Data.DataColumn columndesconto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public aparelhoDataTable() {
                this.TableName = "aparelho";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal aparelhoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected aparelhoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_aparelhoColumn {
                get {
                    return this.columnid_aparelho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_fabricanteColumn {
                get {
                    return this.columnid_fabricante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn modeloColumn {
                get {
                    return this.columnmodelo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn alturaColumn {
                get {
                    return this.columnaltura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn larguraColumn {
                get {
                    return this.columnlargura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn espessuraColumn {
                get {
                    return this.columnespessura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn pesoColumn {
                get {
                    return this.columnpeso;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn precoColumn {
                get {
                    return this.columnpreco;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn quantidadeColumn {
                get {
                    return this.columnquantidade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn descontoColumn {
                get {
                    return this.columndesconto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public aparelhoRow this[int index] {
                get {
                    return ((aparelhoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event aparelhoRowChangeEventHandler aparelhoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event aparelhoRowChangeEventHandler aparelhoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event aparelhoRowChangeEventHandler aparelhoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event aparelhoRowChangeEventHandler aparelhoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddaparelhoRow(aparelhoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public aparelhoRow AddaparelhoRow(long id_fabricante, string modelo, decimal altura, decimal largura, decimal espessura, decimal peso, decimal preco, decimal quantidade, decimal desconto) {
                aparelhoRow rowaparelhoRow = ((aparelhoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        id_fabricante,
                        modelo,
                        altura,
                        largura,
                        espessura,
                        peso,
                        preco,
                        quantidade,
                        desconto};
                rowaparelhoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowaparelhoRow);
                return rowaparelhoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public aparelhoRow FindByid_aparelho(long id_aparelho) {
                return ((aparelhoRow)(this.Rows.Find(new object[] {
                            id_aparelho})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                aparelhoDataTable cln = ((aparelhoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new aparelhoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_aparelho = base.Columns["id_aparelho"];
                this.columnid_fabricante = base.Columns["id_fabricante"];
                this.columnmodelo = base.Columns["modelo"];
                this.columnaltura = base.Columns["altura"];
                this.columnlargura = base.Columns["largura"];
                this.columnespessura = base.Columns["espessura"];
                this.columnpeso = base.Columns["peso"];
                this.columnpreco = base.Columns["preco"];
                this.columnquantidade = base.Columns["quantidade"];
                this.columndesconto = base.Columns["desconto"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_aparelho = new global::System.Data.DataColumn("id_aparelho", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_aparelho);
                this.columnid_fabricante = new global::System.Data.DataColumn("id_fabricante", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_fabricante);
                this.columnmodelo = new global::System.Data.DataColumn("modelo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmodelo);
                this.columnaltura = new global::System.Data.DataColumn("altura", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaltura);
                this.columnlargura = new global::System.Data.DataColumn("largura", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlargura);
                this.columnespessura = new global::System.Data.DataColumn("espessura", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnespessura);
                this.columnpeso = new global::System.Data.DataColumn("peso", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpeso);
                this.columnpreco = new global::System.Data.DataColumn("preco", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpreco);
                this.columnquantidade = new global::System.Data.DataColumn("quantidade", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnquantidade);
                this.columndesconto = new global::System.Data.DataColumn("desconto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesconto);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_aparelho}, true));
                this.columnid_aparelho.AutoIncrement = true;
                this.columnid_aparelho.AutoIncrementSeed = -1;
                this.columnid_aparelho.AutoIncrementStep = -1;
                this.columnid_aparelho.AllowDBNull = false;
                this.columnid_aparelho.Unique = true;
                this.columnid_fabricante.AllowDBNull = false;
                this.columnmodelo.AllowDBNull = false;
                this.columnmodelo.MaxLength = 80;
                this.columnaltura.AllowDBNull = false;
                this.columnlargura.AllowDBNull = false;
                this.columnespessura.AllowDBNull = false;
                this.columnpeso.AllowDBNull = false;
                this.columnpreco.AllowDBNull = false;
                this.columnquantidade.AllowDBNull = false;
                this.columndesconto.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public aparelhoRow NewaparelhoRow() {
                return ((aparelhoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new aparelhoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(aparelhoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.aparelhoRowChanged != null)) {
                    this.aparelhoRowChanged(this, new aparelhoRowChangeEvent(((aparelhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.aparelhoRowChanging != null)) {
                    this.aparelhoRowChanging(this, new aparelhoRowChangeEvent(((aparelhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.aparelhoRowDeleted != null)) {
                    this.aparelhoRowDeleted(this, new aparelhoRowChangeEvent(((aparelhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.aparelhoRowDeleting != null)) {
                    this.aparelhoRowDeleting(this, new aparelhoRowChangeEvent(((aparelhoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveaparelhoRow(aparelhoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "aparelhoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class clienteDataTable : global::System.Data.TypedTableBase<clienteRow> {
            
            private global::System.Data.DataColumn columnid_cliente;
            
            private global::System.Data.DataColumn columnnome;
            
            private global::System.Data.DataColumn columntelefone;
            
            private global::System.Data.DataColumn columnemail;
            
            private global::System.Data.DataColumn columnlogin;
            
            private global::System.Data.DataColumn columnsenha;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteDataTable() {
                this.TableName = "cliente";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal clienteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected clienteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_clienteColumn {
                get {
                    return this.columnid_cliente;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nomeColumn {
                get {
                    return this.columnnome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn telefoneColumn {
                get {
                    return this.columntelefone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn loginColumn {
                get {
                    return this.columnlogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn senhaColumn {
                get {
                    return this.columnsenha;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow this[int index] {
                get {
                    return ((clienteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event clienteRowChangeEventHandler clienteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddclienteRow(clienteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow AddclienteRow(string nome, string telefone, string email, string login, string senha) {
                clienteRow rowclienteRow = ((clienteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nome,
                        telefone,
                        email,
                        login,
                        senha};
                rowclienteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowclienteRow);
                return rowclienteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow FindByid_cliente(long id_cliente) {
                return ((clienteRow)(this.Rows.Find(new object[] {
                            id_cliente})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                clienteDataTable cln = ((clienteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new clienteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_cliente = base.Columns["id_cliente"];
                this.columnnome = base.Columns["nome"];
                this.columntelefone = base.Columns["telefone"];
                this.columnemail = base.Columns["email"];
                this.columnlogin = base.Columns["login"];
                this.columnsenha = base.Columns["senha"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_cliente = new global::System.Data.DataColumn("id_cliente", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_cliente);
                this.columnnome = new global::System.Data.DataColumn("nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnome);
                this.columntelefone = new global::System.Data.DataColumn("telefone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntelefone);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
                this.columnlogin = new global::System.Data.DataColumn("login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlogin);
                this.columnsenha = new global::System.Data.DataColumn("senha", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsenha);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_cliente}, true));
                this.columnid_cliente.AutoIncrement = true;
                this.columnid_cliente.AutoIncrementSeed = -1;
                this.columnid_cliente.AutoIncrementStep = -1;
                this.columnid_cliente.AllowDBNull = false;
                this.columnid_cliente.Unique = true;
                this.columnnome.AllowDBNull = false;
                this.columnnome.MaxLength = 80;
                this.columntelefone.AllowDBNull = false;
                this.columntelefone.MaxLength = 15;
                this.columnemail.AllowDBNull = false;
                this.columnemail.MaxLength = 80;
                this.columnlogin.AllowDBNull = false;
                this.columnlogin.MaxLength = 20;
                this.columnsenha.AllowDBNull = false;
                this.columnsenha.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow NewclienteRow() {
                return ((clienteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new clienteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(clienteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.clienteRowChanged != null)) {
                    this.clienteRowChanged(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.clienteRowChanging != null)) {
                    this.clienteRowChanging(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.clienteRowDeleted != null)) {
                    this.clienteRowDeleted(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.clienteRowDeleting != null)) {
                    this.clienteRowDeleting(this, new clienteRowChangeEvent(((clienteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveclienteRow(clienteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "clienteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class committee_membersDataTable : global::System.Data.TypedTableBase<committee_membersRow> {
            
            private global::System.Data.DataColumn columnplayerno;
            
            private global::System.Data.DataColumn columnbegin_date;
            
            private global::System.Data.DataColumn columnend_date;
            
            private global::System.Data.DataColumn columnposition;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public committee_membersDataTable() {
                this.TableName = "committee_members";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal committee_membersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected committee_membersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn playernoColumn {
                get {
                    return this.columnplayerno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn begin_dateColumn {
                get {
                    return this.columnbegin_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn end_dateColumn {
                get {
                    return this.columnend_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn positionColumn {
                get {
                    return this.columnposition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public committee_membersRow this[int index] {
                get {
                    return ((committee_membersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event committee_membersRowChangeEventHandler committee_membersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event committee_membersRowChangeEventHandler committee_membersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event committee_membersRowChangeEventHandler committee_membersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event committee_membersRowChangeEventHandler committee_membersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Addcommittee_membersRow(committee_membersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public committee_membersRow Addcommittee_membersRow(int playerno, System.DateTime begin_date, System.DateTime end_date, string position) {
                committee_membersRow rowcommittee_membersRow = ((committee_membersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        playerno,
                        begin_date,
                        end_date,
                        position};
                rowcommittee_membersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowcommittee_membersRow);
                return rowcommittee_membersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public committee_membersRow FindByplayernobegin_date(int playerno, System.DateTime begin_date) {
                return ((committee_membersRow)(this.Rows.Find(new object[] {
                            playerno,
                            begin_date})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                committee_membersDataTable cln = ((committee_membersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new committee_membersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnplayerno = base.Columns["playerno"];
                this.columnbegin_date = base.Columns["begin_date"];
                this.columnend_date = base.Columns["end_date"];
                this.columnposition = base.Columns["position"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnplayerno = new global::System.Data.DataColumn("playerno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplayerno);
                this.columnbegin_date = new global::System.Data.DataColumn("begin_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbegin_date);
                this.columnend_date = new global::System.Data.DataColumn("end_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnend_date);
                this.columnposition = new global::System.Data.DataColumn("position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnposition);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnplayerno,
                                this.columnbegin_date}, true));
                this.columnplayerno.AllowDBNull = false;
                this.columnbegin_date.AllowDBNull = false;
                this.columnposition.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public committee_membersRow Newcommittee_membersRow() {
                return ((committee_membersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new committee_membersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(committee_membersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.committee_membersRowChanged != null)) {
                    this.committee_membersRowChanged(this, new committee_membersRowChangeEvent(((committee_membersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.committee_membersRowChanging != null)) {
                    this.committee_membersRowChanging(this, new committee_membersRowChangeEvent(((committee_membersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.committee_membersRowDeleted != null)) {
                    this.committee_membersRowDeleted(this, new committee_membersRowChangeEvent(((committee_membersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.committee_membersRowDeleting != null)) {
                    this.committee_membersRowDeleting(this, new committee_membersRowChangeEvent(((committee_membersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Removecommittee_membersRow(committee_membersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "committee_membersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class fabricanteDataTable : global::System.Data.TypedTableBase<fabricanteRow> {
            
            private global::System.Data.DataColumn columnid_fabricante;
            
            private global::System.Data.DataColumn columnnome;
            
            private global::System.Data.DataColumn columnobservacao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteDataTable() {
                this.TableName = "fabricante";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal fabricanteDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected fabricanteDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_fabricanteColumn {
                get {
                    return this.columnid_fabricante;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nomeColumn {
                get {
                    return this.columnnome;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn observacaoColumn {
                get {
                    return this.columnobservacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow this[int index] {
                get {
                    return ((fabricanteRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event fabricanteRowChangeEventHandler fabricanteRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddfabricanteRow(fabricanteRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow AddfabricanteRow(string nome, string observacao) {
                fabricanteRow rowfabricanteRow = ((fabricanteRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        nome,
                        observacao};
                rowfabricanteRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowfabricanteRow);
                return rowfabricanteRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow FindByid_fabricante(long id_fabricante) {
                return ((fabricanteRow)(this.Rows.Find(new object[] {
                            id_fabricante})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                fabricanteDataTable cln = ((fabricanteDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new fabricanteDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_fabricante = base.Columns["id_fabricante"];
                this.columnnome = base.Columns["nome"];
                this.columnobservacao = base.Columns["observacao"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_fabricante = new global::System.Data.DataColumn("id_fabricante", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_fabricante);
                this.columnnome = new global::System.Data.DataColumn("nome", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnome);
                this.columnobservacao = new global::System.Data.DataColumn("observacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservacao);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_fabricante}, true));
                this.columnid_fabricante.AutoIncrement = true;
                this.columnid_fabricante.AutoIncrementSeed = -1;
                this.columnid_fabricante.AutoIncrementStep = -1;
                this.columnid_fabricante.AllowDBNull = false;
                this.columnid_fabricante.Unique = true;
                this.columnnome.AllowDBNull = false;
                this.columnnome.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow NewfabricanteRow() {
                return ((fabricanteRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new fabricanteRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(fabricanteRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.fabricanteRowChanged != null)) {
                    this.fabricanteRowChanged(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.fabricanteRowChanging != null)) {
                    this.fabricanteRowChanging(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.fabricanteRowDeleted != null)) {
                    this.fabricanteRowDeleted(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.fabricanteRowDeleting != null)) {
                    this.fabricanteRowDeleting(this, new fabricanteRowChangeEvent(((fabricanteRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovefabricanteRow(fabricanteRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "fabricanteDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class matchesDataTable : global::System.Data.TypedTableBase<matchesRow> {
            
            private global::System.Data.DataColumn columnmatchno;
            
            private global::System.Data.DataColumn columnteamno;
            
            private global::System.Data.DataColumn columnplayerno;
            
            private global::System.Data.DataColumn columnwon;
            
            private global::System.Data.DataColumn columnlost;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public matchesDataTable() {
                this.TableName = "matches";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal matchesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected matchesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn matchnoColumn {
                get {
                    return this.columnmatchno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn teamnoColumn {
                get {
                    return this.columnteamno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn playernoColumn {
                get {
                    return this.columnplayerno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn wonColumn {
                get {
                    return this.columnwon;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn lostColumn {
                get {
                    return this.columnlost;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public matchesRow this[int index] {
                get {
                    return ((matchesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event matchesRowChangeEventHandler matchesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event matchesRowChangeEventHandler matchesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event matchesRowChangeEventHandler matchesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event matchesRowChangeEventHandler matchesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddmatchesRow(matchesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public matchesRow AddmatchesRow(int matchno, int teamno, int playerno, short won, short lost) {
                matchesRow rowmatchesRow = ((matchesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        matchno,
                        teamno,
                        playerno,
                        won,
                        lost};
                rowmatchesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowmatchesRow);
                return rowmatchesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public matchesRow FindBymatchno(int matchno) {
                return ((matchesRow)(this.Rows.Find(new object[] {
                            matchno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                matchesDataTable cln = ((matchesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new matchesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnmatchno = base.Columns["matchno"];
                this.columnteamno = base.Columns["teamno"];
                this.columnplayerno = base.Columns["playerno"];
                this.columnwon = base.Columns["won"];
                this.columnlost = base.Columns["lost"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnmatchno = new global::System.Data.DataColumn("matchno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmatchno);
                this.columnteamno = new global::System.Data.DataColumn("teamno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnteamno);
                this.columnplayerno = new global::System.Data.DataColumn("playerno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplayerno);
                this.columnwon = new global::System.Data.DataColumn("won", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnwon);
                this.columnlost = new global::System.Data.DataColumn("lost", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnlost);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnmatchno}, true));
                this.columnmatchno.AllowDBNull = false;
                this.columnmatchno.Unique = true;
                this.columnteamno.AllowDBNull = false;
                this.columnplayerno.AllowDBNull = false;
                this.columnwon.AllowDBNull = false;
                this.columnlost.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public matchesRow NewmatchesRow() {
                return ((matchesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new matchesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(matchesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.matchesRowChanged != null)) {
                    this.matchesRowChanged(this, new matchesRowChangeEvent(((matchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.matchesRowChanging != null)) {
                    this.matchesRowChanging(this, new matchesRowChangeEvent(((matchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.matchesRowDeleted != null)) {
                    this.matchesRowDeleted(this, new matchesRowChangeEvent(((matchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.matchesRowDeleting != null)) {
                    this.matchesRowDeleting(this, new matchesRowChangeEvent(((matchesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovematchesRow(matchesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "matchesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class pedidoDataTable : global::System.Data.TypedTableBase<pedidoRow> {
            
            private global::System.Data.DataColumn columnid_pedido;
            
            private global::System.Data.DataColumn columnid_aparelho;
            
            private global::System.Data.DataColumn columndatahorapedido;
            
            private global::System.Data.DataColumn columnobservacao;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public pedidoDataTable() {
                this.TableName = "pedido";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal pedidoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected pedidoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_pedidoColumn {
                get {
                    return this.columnid_pedido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn id_aparelhoColumn {
                get {
                    return this.columnid_aparelho;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn datahorapedidoColumn {
                get {
                    return this.columndatahorapedido;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn observacaoColumn {
                get {
                    return this.columnobservacao;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public pedidoRow this[int index] {
                get {
                    return ((pedidoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event pedidoRowChangeEventHandler pedidoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event pedidoRowChangeEventHandler pedidoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event pedidoRowChangeEventHandler pedidoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event pedidoRowChangeEventHandler pedidoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddpedidoRow(pedidoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public pedidoRow AddpedidoRow(long id_aparelho, System.DateTime datahorapedido, string observacao) {
                pedidoRow rowpedidoRow = ((pedidoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        id_aparelho,
                        datahorapedido,
                        observacao};
                rowpedidoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpedidoRow);
                return rowpedidoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public pedidoRow FindByid_pedido(long id_pedido) {
                return ((pedidoRow)(this.Rows.Find(new object[] {
                            id_pedido})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                pedidoDataTable cln = ((pedidoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new pedidoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnid_pedido = base.Columns["id_pedido"];
                this.columnid_aparelho = base.Columns["id_aparelho"];
                this.columndatahorapedido = base.Columns["datahorapedido"];
                this.columnobservacao = base.Columns["observacao"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnid_pedido = new global::System.Data.DataColumn("id_pedido", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_pedido);
                this.columnid_aparelho = new global::System.Data.DataColumn("id_aparelho", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnid_aparelho);
                this.columndatahorapedido = new global::System.Data.DataColumn("datahorapedido", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndatahorapedido);
                this.columnobservacao = new global::System.Data.DataColumn("observacao", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobservacao);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnid_pedido}, true));
                this.columnid_pedido.AutoIncrement = true;
                this.columnid_pedido.AutoIncrementSeed = -1;
                this.columnid_pedido.AutoIncrementStep = -1;
                this.columnid_pedido.AllowDBNull = false;
                this.columnid_pedido.Unique = true;
                this.columnid_aparelho.AllowDBNull = false;
                this.columndatahorapedido.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public pedidoRow NewpedidoRow() {
                return ((pedidoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new pedidoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(pedidoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.pedidoRowChanged != null)) {
                    this.pedidoRowChanged(this, new pedidoRowChangeEvent(((pedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.pedidoRowChanging != null)) {
                    this.pedidoRowChanging(this, new pedidoRowChangeEvent(((pedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.pedidoRowDeleted != null)) {
                    this.pedidoRowDeleted(this, new pedidoRowChangeEvent(((pedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.pedidoRowDeleting != null)) {
                    this.pedidoRowDeleting(this, new pedidoRowChangeEvent(((pedidoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovepedidoRow(pedidoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "pedidoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class penaltiesDataTable : global::System.Data.TypedTableBase<penaltiesRow> {
            
            private global::System.Data.DataColumn columnpaymentno;
            
            private global::System.Data.DataColumn columnplayerno;
            
            private global::System.Data.DataColumn columnpayment_date;
            
            private global::System.Data.DataColumn columnamount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public penaltiesDataTable() {
                this.TableName = "penalties";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal penaltiesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected penaltiesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn paymentnoColumn {
                get {
                    return this.columnpaymentno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn playernoColumn {
                get {
                    return this.columnplayerno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn payment_dateColumn {
                get {
                    return this.columnpayment_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn amountColumn {
                get {
                    return this.columnamount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public penaltiesRow this[int index] {
                get {
                    return ((penaltiesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event penaltiesRowChangeEventHandler penaltiesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event penaltiesRowChangeEventHandler penaltiesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event penaltiesRowChangeEventHandler penaltiesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event penaltiesRowChangeEventHandler penaltiesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddpenaltiesRow(penaltiesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public penaltiesRow AddpenaltiesRow(int paymentno, int playerno, System.DateTime payment_date, decimal amount) {
                penaltiesRow rowpenaltiesRow = ((penaltiesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        paymentno,
                        playerno,
                        payment_date,
                        amount};
                rowpenaltiesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowpenaltiesRow);
                return rowpenaltiesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public penaltiesRow FindBypaymentno(int paymentno) {
                return ((penaltiesRow)(this.Rows.Find(new object[] {
                            paymentno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                penaltiesDataTable cln = ((penaltiesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new penaltiesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnpaymentno = base.Columns["paymentno"];
                this.columnplayerno = base.Columns["playerno"];
                this.columnpayment_date = base.Columns["payment_date"];
                this.columnamount = base.Columns["amount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnpaymentno = new global::System.Data.DataColumn("paymentno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpaymentno);
                this.columnplayerno = new global::System.Data.DataColumn("playerno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplayerno);
                this.columnpayment_date = new global::System.Data.DataColumn("payment_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayment_date);
                this.columnamount = new global::System.Data.DataColumn("amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnamount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnpaymentno}, true));
                this.columnpaymentno.AllowDBNull = false;
                this.columnpaymentno.Unique = true;
                this.columnplayerno.AllowDBNull = false;
                this.columnpayment_date.AllowDBNull = false;
                this.columnamount.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public penaltiesRow NewpenaltiesRow() {
                return ((penaltiesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new penaltiesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(penaltiesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.penaltiesRowChanged != null)) {
                    this.penaltiesRowChanged(this, new penaltiesRowChangeEvent(((penaltiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.penaltiesRowChanging != null)) {
                    this.penaltiesRowChanging(this, new penaltiesRowChangeEvent(((penaltiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.penaltiesRowDeleted != null)) {
                    this.penaltiesRowDeleted(this, new penaltiesRowChangeEvent(((penaltiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.penaltiesRowDeleting != null)) {
                    this.penaltiesRowDeleting(this, new penaltiesRowChangeEvent(((penaltiesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemovepenaltiesRow(penaltiesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "penaltiesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class playersDataTable : global::System.Data.TypedTableBase<playersRow> {
            
            private global::System.Data.DataColumn columnplayerno;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columninitials;
            
            private global::System.Data.DataColumn columnbirth_date;
            
            private global::System.Data.DataColumn columnsex;
            
            private global::System.Data.DataColumn columnjoined;
            
            private global::System.Data.DataColumn columnstreet;
            
            private global::System.Data.DataColumn columnhouseno;
            
            private global::System.Data.DataColumn columnpostcode;
            
            private global::System.Data.DataColumn columntown;
            
            private global::System.Data.DataColumn columnphoneno;
            
            private global::System.Data.DataColumn columnleagueno;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public playersDataTable() {
                this.TableName = "players";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal playersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected playersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn playernoColumn {
                get {
                    return this.columnplayerno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn initialsColumn {
                get {
                    return this.columninitials;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn birth_dateColumn {
                get {
                    return this.columnbirth_date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn sexColumn {
                get {
                    return this.columnsex;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn joinedColumn {
                get {
                    return this.columnjoined;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn streetColumn {
                get {
                    return this.columnstreet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn housenoColumn {
                get {
                    return this.columnhouseno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn postcodeColumn {
                get {
                    return this.columnpostcode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn townColumn {
                get {
                    return this.columntown;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn phonenoColumn {
                get {
                    return this.columnphoneno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn leaguenoColumn {
                get {
                    return this.columnleagueno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public playersRow this[int index] {
                get {
                    return ((playersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event playersRowChangeEventHandler playersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event playersRowChangeEventHandler playersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event playersRowChangeEventHandler playersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event playersRowChangeEventHandler playersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddplayersRow(playersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public playersRow AddplayersRow(int playerno, string name, string initials, System.DateTime birth_date, string sex, short joined, string street, string houseno, string postcode, string town, string phoneno, string leagueno) {
                playersRow rowplayersRow = ((playersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        playerno,
                        name,
                        initials,
                        birth_date,
                        sex,
                        joined,
                        street,
                        houseno,
                        postcode,
                        town,
                        phoneno,
                        leagueno};
                rowplayersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowplayersRow);
                return rowplayersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public playersRow FindByplayerno(int playerno) {
                return ((playersRow)(this.Rows.Find(new object[] {
                            playerno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                playersDataTable cln = ((playersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new playersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnplayerno = base.Columns["playerno"];
                this.columnname = base.Columns["name"];
                this.columninitials = base.Columns["initials"];
                this.columnbirth_date = base.Columns["birth_date"];
                this.columnsex = base.Columns["sex"];
                this.columnjoined = base.Columns["joined"];
                this.columnstreet = base.Columns["street"];
                this.columnhouseno = base.Columns["houseno"];
                this.columnpostcode = base.Columns["postcode"];
                this.columntown = base.Columns["town"];
                this.columnphoneno = base.Columns["phoneno"];
                this.columnleagueno = base.Columns["leagueno"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnplayerno = new global::System.Data.DataColumn("playerno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplayerno);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columninitials = new global::System.Data.DataColumn("initials", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninitials);
                this.columnbirth_date = new global::System.Data.DataColumn("birth_date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbirth_date);
                this.columnsex = new global::System.Data.DataColumn("sex", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsex);
                this.columnjoined = new global::System.Data.DataColumn("joined", typeof(short), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnjoined);
                this.columnstreet = new global::System.Data.DataColumn("street", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstreet);
                this.columnhouseno = new global::System.Data.DataColumn("houseno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhouseno);
                this.columnpostcode = new global::System.Data.DataColumn("postcode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostcode);
                this.columntown = new global::System.Data.DataColumn("town", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntown);
                this.columnphoneno = new global::System.Data.DataColumn("phoneno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphoneno);
                this.columnleagueno = new global::System.Data.DataColumn("leagueno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnleagueno);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnplayerno}, true));
                this.columnplayerno.AllowDBNull = false;
                this.columnplayerno.Unique = true;
                this.columnname.AllowDBNull = false;
                this.columnname.MaxLength = 15;
                this.columninitials.AllowDBNull = false;
                this.columninitials.MaxLength = 3;
                this.columnsex.AllowDBNull = false;
                this.columnsex.MaxLength = 1;
                this.columnjoined.AllowDBNull = false;
                this.columnstreet.AllowDBNull = false;
                this.columnstreet.MaxLength = 30;
                this.columnhouseno.MaxLength = 4;
                this.columnpostcode.MaxLength = 6;
                this.columntown.AllowDBNull = false;
                this.columntown.MaxLength = 10;
                this.columnphoneno.MaxLength = 13;
                this.columnleagueno.MaxLength = 4;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public playersRow NewplayersRow() {
                return ((playersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new playersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(playersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.playersRowChanged != null)) {
                    this.playersRowChanged(this, new playersRowChangeEvent(((playersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.playersRowChanging != null)) {
                    this.playersRowChanging(this, new playersRowChangeEvent(((playersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.playersRowDeleted != null)) {
                    this.playersRowDeleted(this, new playersRowChangeEvent(((playersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.playersRowDeleting != null)) {
                    this.playersRowDeleting(this, new playersRowChangeEvent(((playersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveplayersRow(playersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "playersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class teamsDataTable : global::System.Data.TypedTableBase<teamsRow> {
            
            private global::System.Data.DataColumn columnteamno;
            
            private global::System.Data.DataColumn columnplayerno;
            
            private global::System.Data.DataColumn columndivision;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public teamsDataTable() {
                this.TableName = "teams";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal teamsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected teamsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn teamnoColumn {
                get {
                    return this.columnteamno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn playernoColumn {
                get {
                    return this.columnplayerno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn divisionColumn {
                get {
                    return this.columndivision;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public teamsRow this[int index] {
                get {
                    return ((teamsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event teamsRowChangeEventHandler teamsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event teamsRowChangeEventHandler teamsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event teamsRowChangeEventHandler teamsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event teamsRowChangeEventHandler teamsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddteamsRow(teamsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public teamsRow AddteamsRow(int teamno, int playerno, string division) {
                teamsRow rowteamsRow = ((teamsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        teamno,
                        playerno,
                        division};
                rowteamsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowteamsRow);
                return rowteamsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public teamsRow FindByteamno(int teamno) {
                return ((teamsRow)(this.Rows.Find(new object[] {
                            teamno})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                teamsDataTable cln = ((teamsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new teamsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnteamno = base.Columns["teamno"];
                this.columnplayerno = base.Columns["playerno"];
                this.columndivision = base.Columns["division"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnteamno = new global::System.Data.DataColumn("teamno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnteamno);
                this.columnplayerno = new global::System.Data.DataColumn("playerno", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnplayerno);
                this.columndivision = new global::System.Data.DataColumn("division", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndivision);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnteamno}, true));
                this.columnteamno.AllowDBNull = false;
                this.columnteamno.Unique = true;
                this.columnplayerno.AllowDBNull = false;
                this.columndivision.AllowDBNull = false;
                this.columndivision.MaxLength = 6;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public teamsRow NewteamsRow() {
                return ((teamsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new teamsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(teamsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.teamsRowChanged != null)) {
                    this.teamsRowChanged(this, new teamsRowChangeEvent(((teamsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.teamsRowChanging != null)) {
                    this.teamsRowChanging(this, new teamsRowChangeEvent(((teamsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.teamsRowDeleted != null)) {
                    this.teamsRowDeleted(this, new teamsRowChangeEvent(((teamsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.teamsRowDeleting != null)) {
                    this.teamsRowDeleting(this, new teamsRowChangeEvent(((teamsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveteamsRow(teamsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                projetosctiDataSet ds = new projetosctiDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "teamsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class aparelhoRow : global::System.Data.DataRow {
            
            private aparelhoDataTable tableaparelho;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal aparelhoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableaparelho = ((aparelhoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_aparelho {
                get {
                    return ((long)(this[this.tableaparelho.id_aparelhoColumn]));
                }
                set {
                    this[this.tableaparelho.id_aparelhoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_fabricante {
                get {
                    return ((long)(this[this.tableaparelho.id_fabricanteColumn]));
                }
                set {
                    this[this.tableaparelho.id_fabricanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string modelo {
                get {
                    return ((string)(this[this.tableaparelho.modeloColumn]));
                }
                set {
                    this[this.tableaparelho.modeloColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal altura {
                get {
                    return ((decimal)(this[this.tableaparelho.alturaColumn]));
                }
                set {
                    this[this.tableaparelho.alturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal largura {
                get {
                    return ((decimal)(this[this.tableaparelho.larguraColumn]));
                }
                set {
                    this[this.tableaparelho.larguraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal espessura {
                get {
                    return ((decimal)(this[this.tableaparelho.espessuraColumn]));
                }
                set {
                    this[this.tableaparelho.espessuraColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal peso {
                get {
                    return ((decimal)(this[this.tableaparelho.pesoColumn]));
                }
                set {
                    this[this.tableaparelho.pesoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal preco {
                get {
                    return ((decimal)(this[this.tableaparelho.precoColumn]));
                }
                set {
                    this[this.tableaparelho.precoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal quantidade {
                get {
                    return ((decimal)(this[this.tableaparelho.quantidadeColumn]));
                }
                set {
                    this[this.tableaparelho.quantidadeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal desconto {
                get {
                    return ((decimal)(this[this.tableaparelho.descontoColumn]));
                }
                set {
                    this[this.tableaparelho.descontoColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class clienteRow : global::System.Data.DataRow {
            
            private clienteDataTable tablecliente;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal clienteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecliente = ((clienteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_cliente {
                get {
                    return ((long)(this[this.tablecliente.id_clienteColumn]));
                }
                set {
                    this[this.tablecliente.id_clienteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nome {
                get {
                    return ((string)(this[this.tablecliente.nomeColumn]));
                }
                set {
                    this[this.tablecliente.nomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string telefone {
                get {
                    return ((string)(this[this.tablecliente.telefoneColumn]));
                }
                set {
                    this[this.tablecliente.telefoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string email {
                get {
                    return ((string)(this[this.tablecliente.emailColumn]));
                }
                set {
                    this[this.tablecliente.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string login {
                get {
                    return ((string)(this[this.tablecliente.loginColumn]));
                }
                set {
                    this[this.tablecliente.loginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string senha {
                get {
                    return ((string)(this[this.tablecliente.senhaColumn]));
                }
                set {
                    this[this.tablecliente.senhaColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class committee_membersRow : global::System.Data.DataRow {
            
            private committee_membersDataTable tablecommittee_members;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal committee_membersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablecommittee_members = ((committee_membersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int playerno {
                get {
                    return ((int)(this[this.tablecommittee_members.playernoColumn]));
                }
                set {
                    this[this.tablecommittee_members.playernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime begin_date {
                get {
                    return ((global::System.DateTime)(this[this.tablecommittee_members.begin_dateColumn]));
                }
                set {
                    this[this.tablecommittee_members.begin_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime end_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablecommittee_members.end_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'end_date\' in table \'committee_members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommittee_members.end_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string position {
                get {
                    try {
                        return ((string)(this[this.tablecommittee_members.positionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'position\' in table \'committee_members\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablecommittee_members.positionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isend_dateNull() {
                return this.IsNull(this.tablecommittee_members.end_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setend_dateNull() {
                this[this.tablecommittee_members.end_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IspositionNull() {
                return this.IsNull(this.tablecommittee_members.positionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetpositionNull() {
                this[this.tablecommittee_members.positionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class fabricanteRow : global::System.Data.DataRow {
            
            private fabricanteDataTable tablefabricante;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal fabricanteRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablefabricante = ((fabricanteDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_fabricante {
                get {
                    return ((long)(this[this.tablefabricante.id_fabricanteColumn]));
                }
                set {
                    this[this.tablefabricante.id_fabricanteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string nome {
                get {
                    return ((string)(this[this.tablefabricante.nomeColumn]));
                }
                set {
                    this[this.tablefabricante.nomeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string observacao {
                get {
                    try {
                        return ((string)(this[this.tablefabricante.observacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observacao\' in table \'fabricante\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablefabricante.observacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsobservacaoNull() {
                return this.IsNull(this.tablefabricante.observacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetobservacaoNull() {
                this[this.tablefabricante.observacaoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class matchesRow : global::System.Data.DataRow {
            
            private matchesDataTable tablematches;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal matchesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablematches = ((matchesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int matchno {
                get {
                    return ((int)(this[this.tablematches.matchnoColumn]));
                }
                set {
                    this[this.tablematches.matchnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int teamno {
                get {
                    return ((int)(this[this.tablematches.teamnoColumn]));
                }
                set {
                    this[this.tablematches.teamnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int playerno {
                get {
                    return ((int)(this[this.tablematches.playernoColumn]));
                }
                set {
                    this[this.tablematches.playernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short won {
                get {
                    return ((short)(this[this.tablematches.wonColumn]));
                }
                set {
                    this[this.tablematches.wonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short lost {
                get {
                    return ((short)(this[this.tablematches.lostColumn]));
                }
                set {
                    this[this.tablematches.lostColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class pedidoRow : global::System.Data.DataRow {
            
            private pedidoDataTable tablepedido;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal pedidoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepedido = ((pedidoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_pedido {
                get {
                    return ((long)(this[this.tablepedido.id_pedidoColumn]));
                }
                set {
                    this[this.tablepedido.id_pedidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public long id_aparelho {
                get {
                    return ((long)(this[this.tablepedido.id_aparelhoColumn]));
                }
                set {
                    this[this.tablepedido.id_aparelhoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime datahorapedido {
                get {
                    return ((global::System.DateTime)(this[this.tablepedido.datahorapedidoColumn]));
                }
                set {
                    this[this.tablepedido.datahorapedidoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string observacao {
                get {
                    try {
                        return ((string)(this[this.tablepedido.observacaoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'observacao\' in table \'pedido\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablepedido.observacaoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsobservacaoNull() {
                return this.IsNull(this.tablepedido.observacaoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetobservacaoNull() {
                this[this.tablepedido.observacaoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class penaltiesRow : global::System.Data.DataRow {
            
            private penaltiesDataTable tablepenalties;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal penaltiesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablepenalties = ((penaltiesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int paymentno {
                get {
                    return ((int)(this[this.tablepenalties.paymentnoColumn]));
                }
                set {
                    this[this.tablepenalties.paymentnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int playerno {
                get {
                    return ((int)(this[this.tablepenalties.playernoColumn]));
                }
                set {
                    this[this.tablepenalties.playernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime payment_date {
                get {
                    return ((global::System.DateTime)(this[this.tablepenalties.payment_dateColumn]));
                }
                set {
                    this[this.tablepenalties.payment_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal amount {
                get {
                    return ((decimal)(this[this.tablepenalties.amountColumn]));
                }
                set {
                    this[this.tablepenalties.amountColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class playersRow : global::System.Data.DataRow {
            
            private playersDataTable tableplayers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal playersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableplayers = ((playersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int playerno {
                get {
                    return ((int)(this[this.tableplayers.playernoColumn]));
                }
                set {
                    this[this.tableplayers.playernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string name {
                get {
                    return ((string)(this[this.tableplayers.nameColumn]));
                }
                set {
                    this[this.tableplayers.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string initials {
                get {
                    return ((string)(this[this.tableplayers.initialsColumn]));
                }
                set {
                    this[this.tableplayers.initialsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime birth_date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableplayers.birth_dateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'birth_date\' in table \'players\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplayers.birth_dateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string sex {
                get {
                    return ((string)(this[this.tableplayers.sexColumn]));
                }
                set {
                    this[this.tableplayers.sexColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public short joined {
                get {
                    return ((short)(this[this.tableplayers.joinedColumn]));
                }
                set {
                    this[this.tableplayers.joinedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string street {
                get {
                    return ((string)(this[this.tableplayers.streetColumn]));
                }
                set {
                    this[this.tableplayers.streetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string houseno {
                get {
                    try {
                        return ((string)(this[this.tableplayers.housenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'houseno\' in table \'players\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplayers.housenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string postcode {
                get {
                    try {
                        return ((string)(this[this.tableplayers.postcodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postcode\' in table \'players\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplayers.postcodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string town {
                get {
                    return ((string)(this[this.tableplayers.townColumn]));
                }
                set {
                    this[this.tableplayers.townColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string phoneno {
                get {
                    try {
                        return ((string)(this[this.tableplayers.phonenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'phoneno\' in table \'players\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplayers.phonenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string leagueno {
                get {
                    try {
                        return ((string)(this[this.tableplayers.leaguenoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'leagueno\' in table \'players\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableplayers.leaguenoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool Isbirth_dateNull() {
                return this.IsNull(this.tableplayers.birth_dateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void Setbirth_dateNull() {
                this[this.tableplayers.birth_dateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IshousenoNull() {
                return this.IsNull(this.tableplayers.housenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SethousenoNull() {
                this[this.tableplayers.housenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IspostcodeNull() {
                return this.IsNull(this.tableplayers.postcodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetpostcodeNull() {
                this[this.tableplayers.postcodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsphonenoNull() {
                return this.IsNull(this.tableplayers.phonenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetphonenoNull() {
                this[this.tableplayers.phonenoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsleaguenoNull() {
                return this.IsNull(this.tableplayers.leaguenoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetleaguenoNull() {
                this[this.tableplayers.leaguenoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class teamsRow : global::System.Data.DataRow {
            
            private teamsDataTable tableteams;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal teamsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableteams = ((teamsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int teamno {
                get {
                    return ((int)(this[this.tableteams.teamnoColumn]));
                }
                set {
                    this[this.tableteams.teamnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int playerno {
                get {
                    return ((int)(this[this.tableteams.playernoColumn]));
                }
                set {
                    this[this.tableteams.playernoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string division {
                get {
                    return ((string)(this[this.tableteams.divisionColumn]));
                }
                set {
                    this[this.tableteams.divisionColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class aparelhoRowChangeEvent : global::System.EventArgs {
            
            private aparelhoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public aparelhoRowChangeEvent(aparelhoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public aparelhoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class clienteRowChangeEvent : global::System.EventArgs {
            
            private clienteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRowChangeEvent(clienteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public clienteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class committee_membersRowChangeEvent : global::System.EventArgs {
            
            private committee_membersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public committee_membersRowChangeEvent(committee_membersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public committee_membersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class fabricanteRowChangeEvent : global::System.EventArgs {
            
            private fabricanteRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRowChangeEvent(fabricanteRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public fabricanteRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class matchesRowChangeEvent : global::System.EventArgs {
            
            private matchesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public matchesRowChangeEvent(matchesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public matchesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class pedidoRowChangeEvent : global::System.EventArgs {
            
            private pedidoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public pedidoRowChangeEvent(pedidoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public pedidoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class penaltiesRowChangeEvent : global::System.EventArgs {
            
            private penaltiesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public penaltiesRowChangeEvent(penaltiesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public penaltiesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class playersRowChangeEvent : global::System.EventArgs {
            
            private playersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public playersRowChangeEvent(playersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public playersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class teamsRowChangeEvent : global::System.EventArgs {
            
            private teamsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public teamsRowChangeEvent(teamsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public teamsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CelularCTI.Desktop.projetosctiDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class aparelhoTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public aparelhoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "aparelho";
            tableMapping.ColumnMappings.Add("id_aparelho", "id_aparelho");
            tableMapping.ColumnMappings.Add("id_fabricante", "id_fabricante");
            tableMapping.ColumnMappings.Add("modelo", "modelo");
            tableMapping.ColumnMappings.Add("altura", "altura");
            tableMapping.ColumnMappings.Add("largura", "largura");
            tableMapping.ColumnMappings.Add("espessura", "espessura");
            tableMapping.ColumnMappings.Add("peso", "peso");
            tableMapping.ColumnMappings.Add("preco", "preco");
            tableMapping.ColumnMappings.Add("quantidade", "quantidade");
            tableMapping.ColumnMappings.Add("desconto", "desconto");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""projetoscti"".""public"".""aparelho"" WHERE ((""id_aparelho"" = @Original_id_aparelho) AND (""id_fabricante"" = @Original_id_fabricante) AND (""modelo"" = @Original_modelo) AND (""altura"" = @Original_altura) AND (""largura"" = @Original_largura) AND (""espessura"" = @Original_espessura) AND (""peso"" = @Original_peso) AND (""preco"" = @Original_preco) AND (""quantidade"" = @Original_quantidade) AND (""desconto"" = @Original_desconto))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_aparelho";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_aparelho";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_fabricante";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_fabricante";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_modelo";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "modelo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_altura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "altura";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_largura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "largura";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_espessura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "espessura";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_peso";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "peso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_preco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "preco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_quantidade";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "quantidade";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_desconto";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "desconto";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"aparelho\" (\"id_fabricante\", \"modelo\", \"altura" +
                "\", \"largura\", \"espessura\", \"peso\", \"preco\", \"quantidade\", \"desconto\") VALUES (@i" +
                "d_fabricante, @modelo, @altura, @largura, @espessura, @peso, @preco, @quantidade" +
                ", @desconto)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_fabricante";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_fabricante";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@modelo";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "modelo";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@altura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "altura";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@largura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "largura";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@espessura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "espessura";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@peso";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "peso";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@preco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "preco";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@quantidade";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "quantidade";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@desconto";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "desconto";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""aparelho"" SET ""id_fabricante"" = @id_fabricante, ""modelo"" = @modelo, ""altura"" = @altura, ""largura"" = @largura, ""espessura"" = @espessura, ""peso"" = @peso, ""preco"" = @preco, ""quantidade"" = @quantidade, ""desconto"" = @desconto WHERE ((""id_aparelho"" = @Original_id_aparelho) AND (""id_fabricante"" = @Original_id_fabricante) AND (""modelo"" = @Original_modelo) AND (""altura"" = @Original_altura) AND (""largura"" = @Original_largura) AND (""espessura"" = @Original_espessura) AND (""peso"" = @Original_peso) AND (""preco"" = @Original_preco) AND (""quantidade"" = @Original_quantidade) AND (""desconto"" = @Original_desconto))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_fabricante";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_fabricante";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@modelo";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "modelo";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@altura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "altura";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@largura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "largura";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@espessura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "espessura";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@peso";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "peso";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@preco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "preco";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@quantidade";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "quantidade";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@desconto";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "desconto";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_aparelho";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_aparelho";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_fabricante";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_fabricante";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_modelo";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "modelo";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_altura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "altura";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_largura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "largura";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_espessura";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "espessura";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_peso";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "peso";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_preco";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "preco";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_quantidade";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "quantidade";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_desconto";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "desconto";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_aparelho\", \"id_fabricante\", \"modelo\", \"altura\", \"largura\", \"espessura\"" +
                ", \"peso\", \"preco\", \"quantidade\", \"desconto\" FROM \"public\".\"aparelho\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.aparelhoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.aparelhoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.aparelhoDataTable dataTable = new projetosctiDataSet.aparelhoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.aparelhoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "aparelho");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_aparelho, long @Original_id_fabricante, string @Original_modelo, decimal @Original_altura, decimal @Original_largura, decimal @Original_espessura, decimal @Original_peso, decimal @Original_preco, decimal @Original_quantidade, decimal @Original_desconto) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_aparelho));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(@Original_id_fabricante));
            if ((@Original_modelo == null)) {
                throw new global::System.ArgumentNullException("@Original_modelo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_modelo));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(@Original_altura));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(@Original_largura));
            this.Adapter.DeleteCommand.Parameters[5].Value = ((decimal)(@Original_espessura));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(@Original_peso));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((decimal)(@Original_preco));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((decimal)(@Original_quantidade));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((decimal)(@Original_desconto));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_fabricante, string @modelo, decimal @altura, decimal @largura, decimal @espessura, decimal @peso, decimal @preco, decimal @quantidade, decimal @desconto) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_fabricante));
            if ((@modelo == null)) {
                throw new global::System.ArgumentNullException("@modelo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@modelo));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(@altura));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(@largura));
            this.Adapter.InsertCommand.Parameters[4].Value = ((decimal)(@espessura));
            this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(@peso));
            this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(@preco));
            this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(@quantidade));
            this.Adapter.InsertCommand.Parameters[8].Value = ((decimal)(@desconto));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    long @id_fabricante, 
                    string @modelo, 
                    decimal @altura, 
                    decimal @largura, 
                    decimal @espessura, 
                    decimal @peso, 
                    decimal @preco, 
                    decimal @quantidade, 
                    decimal @desconto, 
                    long @Original_id_aparelho, 
                    long @Original_id_fabricante, 
                    string @Original_modelo, 
                    decimal @Original_altura, 
                    decimal @Original_largura, 
                    decimal @Original_espessura, 
                    decimal @Original_peso, 
                    decimal @Original_preco, 
                    decimal @Original_quantidade, 
                    decimal @Original_desconto) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_fabricante));
            if ((@modelo == null)) {
                throw new global::System.ArgumentNullException("@modelo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@modelo));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(@altura));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(@largura));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((decimal)(@espessura));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(@peso));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(@preco));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(@quantidade));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(@desconto));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((long)(@Original_id_aparelho));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((long)(@Original_id_fabricante));
            if ((@Original_modelo == null)) {
                throw new global::System.ArgumentNullException("@Original_modelo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(@Original_modelo));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(@Original_altura));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(@Original_largura));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((decimal)(@Original_espessura));
            this.Adapter.UpdateCommand.Parameters[15].Value = ((decimal)(@Original_peso));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((decimal)(@Original_preco));
            this.Adapter.UpdateCommand.Parameters[17].Value = ((decimal)(@Original_quantidade));
            this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(@Original_desconto));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class clienteTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public clienteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "cliente";
            tableMapping.ColumnMappings.Add("id_cliente", "id_cliente");
            tableMapping.ColumnMappings.Add("nome", "nome");
            tableMapping.ColumnMappings.Add("telefone", "telefone");
            tableMapping.ColumnMappings.Add("email", "email");
            tableMapping.ColumnMappings.Add("login", "login");
            tableMapping.ColumnMappings.Add("senha", "senha");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"projetoscti\".\"public\".\"cliente\" WHERE ((\"id_cliente\" = @Original_id_" +
                "cliente) AND (\"nome\" = @Original_nome) AND (\"telefone\" = @Original_telefone) AND" +
                " (\"email\" = @Original_email) AND (\"login\" = @Original_login) AND (\"senha\" = @Ori" +
                "ginal_senha))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_cliente";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_cliente";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_telefone";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "telefone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_senha";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "senha";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"cliente\" (\"nome\", \"telefone\", \"email\", \"login" +
                "\", \"senha\") VALUES (@nome, @telefone, @email, @login, @senha)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@telefone";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "telefone";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@senha";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "senha";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""cliente"" SET ""nome"" = @nome, ""telefone"" = @telefone, ""email"" = @email, ""login"" = @login, ""senha"" = @senha WHERE ((""id_cliente"" = @Original_id_cliente) AND (""nome"" = @Original_nome) AND (""telefone"" = @Original_telefone) AND (""email"" = @Original_email) AND (""login"" = @Original_login) AND (""senha"" = @Original_senha))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@telefone";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "telefone";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@login";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@senha";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "senha";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_cliente";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_cliente";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_telefone";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "telefone";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_email";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "email";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_login";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "login";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_senha";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "senha";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_cliente\", \"nome\", \"telefone\", \"email\", \"login\", \"senha\" FROM \"public\"." +
                "\"cliente\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.clienteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.clienteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.clienteDataTable dataTable = new projetosctiDataSet.clienteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.clienteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "cliente");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_cliente, string @Original_nome, string @Original_telefone, string @Original_email, string @Original_login, string @Original_senha) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_cliente));
            if ((@Original_nome == null)) {
                throw new global::System.ArgumentNullException("@Original_nome");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_nome));
            }
            if ((@Original_telefone == null)) {
                throw new global::System.ArgumentNullException("@Original_telefone");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_telefone));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_email));
            }
            if ((@Original_login == null)) {
                throw new global::System.ArgumentNullException("@Original_login");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_login));
            }
            if ((@Original_senha == null)) {
                throw new global::System.ArgumentNullException("@Original_senha");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(@Original_senha));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string @nome, string @telefone, string @email, string @login, string @senha) {
            if ((@nome == null)) {
                throw new global::System.ArgumentNullException("@nome");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(@nome));
            }
            if ((@telefone == null)) {
                throw new global::System.ArgumentNullException("@telefone");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@telefone));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@email));
            }
            if ((@login == null)) {
                throw new global::System.ArgumentNullException("@login");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@login));
            }
            if ((@senha == null)) {
                throw new global::System.ArgumentNullException("@senha");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@senha));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @nome, string @telefone, string @email, string @login, string @senha, long @Original_id_cliente, string @Original_nome, string @Original_telefone, string @Original_email, string @Original_login, string @Original_senha) {
            if ((@nome == null)) {
                throw new global::System.ArgumentNullException("@nome");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(@nome));
            }
            if ((@telefone == null)) {
                throw new global::System.ArgumentNullException("@telefone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@telefone));
            }
            if ((@email == null)) {
                throw new global::System.ArgumentNullException("@email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@email));
            }
            if ((@login == null)) {
                throw new global::System.ArgumentNullException("@login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@login));
            }
            if ((@senha == null)) {
                throw new global::System.ArgumentNullException("@senha");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@senha));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((long)(@Original_id_cliente));
            if ((@Original_nome == null)) {
                throw new global::System.ArgumentNullException("@Original_nome");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(@Original_nome));
            }
            if ((@Original_telefone == null)) {
                throw new global::System.ArgumentNullException("@Original_telefone");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@Original_telefone));
            }
            if ((@Original_email == null)) {
                throw new global::System.ArgumentNullException("@Original_email");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@Original_email));
            }
            if ((@Original_login == null)) {
                throw new global::System.ArgumentNullException("@Original_login");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_login));
            }
            if ((@Original_senha == null)) {
                throw new global::System.ArgumentNullException("@Original_senha");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(@Original_senha));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class committee_membersTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public committee_membersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "committee_members";
            tableMapping.ColumnMappings.Add("playerno", "playerno");
            tableMapping.ColumnMappings.Add("begin_date", "begin_date");
            tableMapping.ColumnMappings.Add("end_date", "end_date");
            tableMapping.ColumnMappings.Add("position", "position");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""projetoscti"".""public"".""committee_members"" WHERE ((""playerno"" = @Original_playerno) AND (""begin_date"" = @Original_begin_date) AND ((@IsNull_end_date = 1 AND ""end_date"" IS NULL) OR (""end_date"" = @Original_end_date)) AND ((@IsNull_position = 1 AND ""position"" IS NULL) OR (""position"" = @Original_position)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_begin_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "begin_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_end_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "end_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_end_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "end_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_position";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"committee_members\" (\"playerno\", \"begin_date\"," +
                " \"end_date\", \"position\") VALUES (@playerno, @begin_date, @end_date, @position)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@begin_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "begin_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@end_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "end_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "position";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""committee_members"" SET ""playerno"" = @playerno, ""begin_date"" = @begin_date, ""end_date"" = @end_date, ""position"" = @position WHERE ((""playerno"" = @Original_playerno) AND (""begin_date"" = @Original_begin_date) AND ((@IsNull_end_date = 1 AND ""end_date"" IS NULL) OR (""end_date"" = @Original_end_date)) AND ((@IsNull_position = 1 AND ""position"" IS NULL) OR (""position"" = @Original_position)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@begin_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "begin_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@end_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "end_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "position";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_begin_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "begin_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_end_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "end_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_end_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "end_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_position";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_position";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "position";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"playerno\", \"begin_date\", \"end_date\", \"position\" FROM \"public\".\"committee_" +
                "members\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.committee_membersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.committee_membersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.committee_membersDataTable dataTable = new projetosctiDataSet.committee_membersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.committee_membersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "committee_members");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_playerno, System.DateTime @Original_begin_date, global::System.Nullable<global::System.DateTime> @Original_end_date, string @Original_position) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_playerno));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(@Original_begin_date));
            if ((@Original_end_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(@Original_end_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((@Original_position == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(@Original_position));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @playerno, System.DateTime @begin_date, global::System.Nullable<global::System.DateTime> @end_date, string @position) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@playerno));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(@begin_date));
            if ((@end_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(@end_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((@position == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(@position));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @playerno, System.DateTime @begin_date, global::System.Nullable<global::System.DateTime> @end_date, string @position, int @Original_playerno, System.DateTime @Original_begin_date, global::System.Nullable<global::System.DateTime> @Original_end_date, string @Original_position) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@playerno));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(@begin_date));
            if ((@end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(@end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((@position == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@position));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_playerno));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(@Original_begin_date));
            if ((@Original_end_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(@Original_end_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((@Original_position == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@Original_position));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> @end_date, string @position, int @Original_playerno, System.DateTime @Original_begin_date, global::System.Nullable<global::System.DateTime> @Original_end_date, string @Original_position) {
            return this.Update(@Original_playerno, @Original_begin_date, @end_date, @position, @Original_playerno, @Original_begin_date, @Original_end_date, @Original_position);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class fabricanteTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public fabricanteTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "fabricante";
            tableMapping.ColumnMappings.Add("id_fabricante", "id_fabricante");
            tableMapping.ColumnMappings.Add("nome", "nome");
            tableMapping.ColumnMappings.Add("observacao", "observacao");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"projetoscti\".\"public\".\"fabricante\" WHERE ((\"id_fabricante\" = @Origin" +
                "al_id_fabricante) AND (\"nome\" = @Original_nome) AND ((@IsNull_observacao = 1 AND" +
                " \"observacao\" IS NULL) OR (\"observacao\" = @Original_observacao)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_fabricante";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_fabricante";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_observacao";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"fabricante\" (\"nome\", \"observacao\") VALUES (@n" +
                "ome, @observacao)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""fabricante"" SET ""nome"" = @nome, ""observacao"" = @observacao WHERE ((""id_fabricante"" = @Original_id_fabricante) AND (""nome"" = @Original_nome) AND ((@IsNull_observacao = 1 AND ""observacao"" IS NULL) OR (""observacao"" = @Original_observacao)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_fabricante";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_fabricante";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_nome";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Varchar;
            param.IsNullable = true;
            param.SourceColumn = "nome";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_observacao";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_fabricante\", \"nome\", \"observacao\" FROM \"public\".\"fabricante\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.fabricanteDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.fabricanteDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.fabricanteDataTable dataTable = new projetosctiDataSet.fabricanteDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.fabricanteDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "fabricante");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_fabricante, string @Original_nome, string @Original_observacao) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_fabricante));
            if ((@Original_nome == null)) {
                throw new global::System.ArgumentNullException("@Original_nome");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_nome));
            }
            if ((@Original_observacao == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(@Original_observacao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string @nome, string @observacao) {
            if ((@nome == null)) {
                throw new global::System.ArgumentNullException("@nome");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(@nome));
            }
            if ((@observacao == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@observacao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string @nome, string @observacao, long @Original_id_fabricante, string @Original_nome, string @Original_observacao) {
            if ((@nome == null)) {
                throw new global::System.ArgumentNullException("@nome");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(@nome));
            }
            if ((@observacao == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@observacao));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((long)(@Original_id_fabricante));
            if ((@Original_nome == null)) {
                throw new global::System.ArgumentNullException("@Original_nome");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(@Original_nome));
            }
            if ((@Original_observacao == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(@Original_observacao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class matchesTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public matchesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "matches";
            tableMapping.ColumnMappings.Add("matchno", "matchno");
            tableMapping.ColumnMappings.Add("teamno", "teamno");
            tableMapping.ColumnMappings.Add("playerno", "playerno");
            tableMapping.ColumnMappings.Add("won", "won");
            tableMapping.ColumnMappings.Add("lost", "lost");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"projetoscti\".\"public\".\"matches\" WHERE ((\"matchno\" = @Original_matchn" +
                "o) AND (\"teamno\" = @Original_teamno) AND (\"playerno\" = @Original_playerno) AND (" +
                "\"won\" = @Original_won) AND (\"lost\" = @Original_lost))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_matchno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "matchno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_won";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "won";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_lost";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "lost";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"matches\" (\"matchno\", \"teamno\", \"playerno\", \"w" +
                "on\", \"lost\") VALUES (@matchno, @teamno, @playerno, @won, @lost)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@matchno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "matchno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@won";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "won";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@lost";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "lost";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""matches"" SET ""matchno"" = @matchno, ""teamno"" = @teamno, ""playerno"" = @playerno, ""won"" = @won, ""lost"" = @lost WHERE ((""matchno"" = @Original_matchno) AND (""teamno"" = @Original_teamno) AND (""playerno"" = @Original_playerno) AND (""won"" = @Original_won) AND (""lost"" = @Original_lost))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@matchno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "matchno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@won";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "won";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@lost";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "lost";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_matchno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "matchno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_won";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "won";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_lost";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "lost";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"matchno\", \"teamno\", \"playerno\", \"won\", \"lost\" FROM \"public\".\"matches\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.matchesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.matchesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.matchesDataTable dataTable = new projetosctiDataSet.matchesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.matchesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "matches");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_matchno, int @Original_teamno, int @Original_playerno, short @Original_won, short @Original_lost) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_matchno));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(@Original_teamno));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(@Original_playerno));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((short)(@Original_won));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((short)(@Original_lost));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @matchno, int @teamno, int @playerno, short @won, short @lost) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@matchno));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@teamno));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(@playerno));
            this.Adapter.InsertCommand.Parameters[3].Value = ((short)(@won));
            this.Adapter.InsertCommand.Parameters[4].Value = ((short)(@lost));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @matchno, int @teamno, int @playerno, short @won, short @lost, int @Original_matchno, int @Original_teamno, int @Original_playerno, short @Original_won, short @Original_lost) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@matchno));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@teamno));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(@playerno));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((short)(@won));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((short)(@lost));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@Original_matchno));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(@Original_teamno));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(@Original_playerno));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((short)(@Original_won));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((short)(@Original_lost));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @teamno, int @playerno, short @won, short @lost, int @Original_matchno, int @Original_teamno, int @Original_playerno, short @Original_won, short @Original_lost) {
            return this.Update(@Original_matchno, @teamno, @playerno, @won, @lost, @Original_matchno, @Original_teamno, @Original_playerno, @Original_won, @Original_lost);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class pedidoTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public pedidoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "pedido";
            tableMapping.ColumnMappings.Add("id_pedido", "id_pedido");
            tableMapping.ColumnMappings.Add("id_aparelho", "id_aparelho");
            tableMapping.ColumnMappings.Add("datahorapedido", "datahorapedido");
            tableMapping.ColumnMappings.Add("observacao", "observacao");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""projetoscti"".""public"".""pedido"" WHERE ((""id_pedido"" = @Original_id_pedido) AND (""id_aparelho"" = @Original_id_aparelho) AND (""datahorapedido"" = @Original_datahorapedido) AND ((@IsNull_observacao = 1 AND ""observacao"" IS NULL) OR (""observacao"" = @Original_observacao)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_pedido";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_pedido";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_aparelho";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_aparelho";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datahorapedido";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datahorapedido";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_observacao";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"pedido\" (\"id_aparelho\", \"datahorapedido\", \"ob" +
                "servacao\") VALUES (@id_aparelho, @datahorapedido, @observacao)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_aparelho";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_aparelho";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datahorapedido";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datahorapedido";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""pedido"" SET ""id_aparelho"" = @id_aparelho, ""datahorapedido"" = @datahorapedido, ""observacao"" = @observacao WHERE ((""id_pedido"" = @Original_id_pedido) AND (""id_aparelho"" = @Original_id_aparelho) AND (""datahorapedido"" = @Original_datahorapedido) AND ((@IsNull_observacao = 1 AND ""observacao"" IS NULL) OR (""observacao"" = @Original_observacao)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@id_aparelho";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_aparelho";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@datahorapedido";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datahorapedido";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_pedido";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_pedido";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_id_aparelho";
            param.DbType = global::System.Data.DbType.Int64;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Bigint;
            param.IsNullable = true;
            param.SourceColumn = "id_aparelho";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_datahorapedido";
            param.DbType = global::System.Data.DbType.DateTime;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Timestamp;
            param.IsNullable = true;
            param.SourceColumn = "datahorapedido";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_observacao";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_observacao";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Text;
            param.IsNullable = true;
            param.SourceColumn = "observacao";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"id_pedido\", \"id_aparelho\", \"datahorapedido\", \"observacao\" FROM \"public\".\"" +
                "pedido\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.pedidoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.pedidoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.pedidoDataTable dataTable = new projetosctiDataSet.pedidoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.pedidoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "pedido");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(long @Original_id_pedido, long @Original_id_aparelho, System.DateTime @Original_datahorapedido, string @Original_observacao) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((long)(@Original_id_pedido));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((long)(@Original_id_aparelho));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(@Original_datahorapedido));
            if ((@Original_observacao == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(@Original_observacao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(long @id_aparelho, System.DateTime @datahorapedido, string @observacao) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((long)(@id_aparelho));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(@datahorapedido));
            if ((@observacao == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@observacao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(long @id_aparelho, System.DateTime @datahorapedido, string @observacao, long @Original_id_pedido, long @Original_id_aparelho, System.DateTime @Original_datahorapedido, string @Original_observacao) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((long)(@id_aparelho));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(@datahorapedido));
            if ((@observacao == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@observacao));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((long)(@Original_id_pedido));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((long)(@Original_id_aparelho));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(@Original_datahorapedido));
            if ((@Original_observacao == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@Original_observacao));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class penaltiesTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public penaltiesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "penalties";
            tableMapping.ColumnMappings.Add("paymentno", "paymentno");
            tableMapping.ColumnMappings.Add("playerno", "playerno");
            tableMapping.ColumnMappings.Add("payment_date", "payment_date");
            tableMapping.ColumnMappings.Add("amount", "amount");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"projetoscti\".\"public\".\"penalties\" WHERE ((\"paymentno\" = @Original_pa" +
                "ymentno) AND (\"playerno\" = @Original_playerno) AND (\"payment_date\" = @Original_p" +
                "ayment_date) AND (\"amount\" = @Original_amount))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_paymentno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "paymentno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_payment_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "payment_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"penalties\" (\"paymentno\", \"playerno\", \"payment" +
                "_date\", \"amount\") VALUES (@paymentno, @playerno, @payment_date, @amount)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@paymentno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "paymentno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@payment_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "payment_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""penalties"" SET ""paymentno"" = @paymentno, ""playerno"" = @playerno, ""payment_date"" = @payment_date, ""amount"" = @amount WHERE ((""paymentno"" = @Original_paymentno) AND (""playerno"" = @Original_playerno) AND (""payment_date"" = @Original_payment_date) AND (""amount"" = @Original_amount))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@paymentno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "paymentno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@payment_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "payment_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@amount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_paymentno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "paymentno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_payment_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "payment_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_amount";
            param.DbType = global::System.Data.DbType.Decimal;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Numeric;
            param.IsNullable = true;
            param.SourceColumn = "amount";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"paymentno\", \"playerno\", \"payment_date\", \"amount\" FROM \"public\".\"penalties" +
                "\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.penaltiesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.penaltiesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.penaltiesDataTable dataTable = new projetosctiDataSet.penaltiesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.penaltiesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "penalties");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_paymentno, int @Original_playerno, System.DateTime @Original_payment_date, decimal @Original_amount) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_paymentno));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(@Original_playerno));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(@Original_payment_date));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((decimal)(@Original_amount));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @paymentno, int @playerno, System.DateTime @payment_date, decimal @amount) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@paymentno));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@playerno));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(@payment_date));
            this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(@amount));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @paymentno, int @playerno, System.DateTime @payment_date, decimal @amount, int @Original_paymentno, int @Original_playerno, System.DateTime @Original_payment_date, decimal @Original_amount) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@paymentno));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@playerno));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(@payment_date));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(@amount));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_paymentno));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(@Original_playerno));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(@Original_payment_date));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(@Original_amount));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @playerno, System.DateTime @payment_date, decimal @amount, int @Original_paymentno, int @Original_playerno, System.DateTime @Original_payment_date, decimal @Original_amount) {
            return this.Update(@Original_paymentno, @playerno, @payment_date, @amount, @Original_paymentno, @Original_playerno, @Original_payment_date, @Original_amount);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class playersTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public playersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "players";
            tableMapping.ColumnMappings.Add("playerno", "playerno");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("initials", "initials");
            tableMapping.ColumnMappings.Add("birth_date", "birth_date");
            tableMapping.ColumnMappings.Add("sex", "sex");
            tableMapping.ColumnMappings.Add("joined", "joined");
            tableMapping.ColumnMappings.Add("street", "street");
            tableMapping.ColumnMappings.Add("houseno", "houseno");
            tableMapping.ColumnMappings.Add("postcode", "postcode");
            tableMapping.ColumnMappings.Add("town", "town");
            tableMapping.ColumnMappings.Add("phoneno", "phoneno");
            tableMapping.ColumnMappings.Add("leagueno", "leagueno");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""projetoscti"".""public"".""players"" WHERE ((""playerno"" = @Original_playerno) AND (""name"" = @Original_name) AND (""initials"" = @Original_initials) AND ((@IsNull_birth_date = 1 AND ""birth_date"" IS NULL) OR (""birth_date"" = @Original_birth_date)) AND (""sex"" = @Original_sex) AND (""joined"" = @Original_joined) AND (""street"" = @Original_street) AND ((@IsNull_houseno = 1 AND ""houseno"" IS NULL) OR (""houseno"" = @Original_houseno)) AND ((@IsNull_postcode = 1 AND ""postcode"" IS NULL) OR (""postcode"" = @Original_postcode)) AND (""town"" = @Original_town) AND ((@IsNull_phoneno = 1 AND ""phoneno"" IS NULL) OR (""phoneno"" = @Original_phoneno)) AND ((@IsNull_leagueno = 1 AND ""leagueno"" IS NULL) OR (""leagueno"" = @Original_leagueno)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_initials";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "initials";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_birth_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "birth_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_birth_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birth_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_sex";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_joined";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "joined";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_street";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "street";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_houseno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "houseno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_houseno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "houseno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_postcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_postcode";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_town";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "town";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_phoneno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "phoneno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_phoneno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "phoneno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_leagueno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "leagueno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_leagueno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "leagueno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""projetoscti"".""public"".""players"" (""playerno"", ""name"", ""initials"", ""birth_date"", ""sex"", ""joined"", ""street"", ""houseno"", ""postcode"", ""town"", ""phoneno"", ""leagueno"") VALUES (@playerno, @name, @initials, @birth_date, @sex, @joined, @street, @houseno, @postcode, @town, @phoneno, @leagueno)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@initials";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "initials";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@birth_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birth_date";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@sex";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@joined";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "joined";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@street";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "street";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@houseno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "houseno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@postcode";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "postcode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@town";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "town";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@phoneno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "phoneno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@leagueno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "leagueno";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""projetoscti"".""public"".""players"" SET ""playerno"" = @playerno, ""name"" = @name, ""initials"" = @initials, ""birth_date"" = @birth_date, ""sex"" = @sex, ""joined"" = @joined, ""street"" = @street, ""houseno"" = @houseno, ""postcode"" = @postcode, ""town"" = @town, ""phoneno"" = @phoneno, ""leagueno"" = @leagueno WHERE ((""playerno"" = @Original_playerno) AND (""name"" = @Original_name) AND (""initials"" = @Original_initials) AND ((@IsNull_birth_date = 1 AND ""birth_date"" IS NULL) OR (""birth_date"" = @Original_birth_date)) AND (""sex"" = @Original_sex) AND (""joined"" = @Original_joined) AND (""street"" = @Original_street) AND ((@IsNull_houseno = 1 AND ""houseno"" IS NULL) OR (""houseno"" = @Original_houseno)) AND ((@IsNull_postcode = 1 AND ""postcode"" IS NULL) OR (""postcode"" = @Original_postcode)) AND (""town"" = @Original_town) AND ((@IsNull_phoneno = 1 AND ""phoneno"" IS NULL) OR (""phoneno"" = @Original_phoneno)) AND ((@IsNull_leagueno = 1 AND ""leagueno"" IS NULL) OR (""leagueno"" = @Original_leagueno)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "name";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@initials";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "initials";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@birth_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birth_date";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@sex";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@joined";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "joined";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@street";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "street";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@houseno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "houseno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@postcode";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "postcode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@town";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "town";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@phoneno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "phoneno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@leagueno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "leagueno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_name";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "name";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_initials";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "initials";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_birth_date";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "birth_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_birth_date";
            param.DbType = global::System.Data.DbType.Date;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Date;
            param.IsNullable = true;
            param.SourceColumn = "birth_date";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_sex";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "sex";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_joined";
            param.DbType = global::System.Data.DbType.Int16;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Smallint;
            param.IsNullable = true;
            param.SourceColumn = "joined";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_street";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "street";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_houseno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "houseno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_houseno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "houseno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_postcode";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_postcode";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "postcode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_town";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "town";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_phoneno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "phoneno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_phoneno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "phoneno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@IsNull_leagueno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "leagueno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_leagueno";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "leagueno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"playerno\", \"name\", \"initials\", \"birth_date\", \"sex\", \"joined\", \"street\", \"" +
                "houseno\", \"postcode\", \"town\", \"phoneno\", \"leagueno\" FROM \"public\".\"players\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.playersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.playersDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.playersDataTable dataTable = new projetosctiDataSet.playersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.playersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "players");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_playerno, string @Original_name, string @Original_initials, global::System.Nullable<global::System.DateTime> @Original_birth_date, string @Original_sex, short @Original_joined, string @Original_street, string @Original_houseno, string @Original_postcode, string @Original_town, string @Original_phoneno, string @Original_leagueno) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_playerno));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(@Original_name));
            }
            if ((@Original_initials == null)) {
                throw new global::System.ArgumentNullException("@Original_initials");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_initials));
            }
            if ((@Original_birth_date.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(@Original_birth_date.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((@Original_sex == null)) {
                throw new global::System.ArgumentNullException("@Original_sex");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(@Original_sex));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((short)(@Original_joined));
            if ((@Original_street == null)) {
                throw new global::System.ArgumentNullException("@Original_street");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(@Original_street));
            }
            if ((@Original_houseno == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(@Original_houseno));
            }
            if ((@Original_postcode == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(@Original_postcode));
            }
            if ((@Original_town == null)) {
                throw new global::System.ArgumentNullException("@Original_town");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(@Original_town));
            }
            if ((@Original_phoneno == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(@Original_phoneno));
            }
            if ((@Original_leagueno == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(@Original_leagueno));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @playerno, string @name, string @initials, global::System.Nullable<global::System.DateTime> @birth_date, string @sex, short @joined, string @street, string @houseno, string @postcode, string @town, string @phoneno, string @leagueno) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@playerno));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@initials == null)) {
                throw new global::System.ArgumentNullException("@initials");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@initials));
            }
            if ((@birth_date.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(@birth_date.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((@sex == null)) {
                throw new global::System.ArgumentNullException("@sex");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(@sex));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((short)(@joined));
            if ((@street == null)) {
                throw new global::System.ArgumentNullException("@street");
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(@street));
            }
            if ((@houseno == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(@houseno));
            }
            if ((@postcode == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(@postcode));
            }
            if ((@town == null)) {
                throw new global::System.ArgumentNullException("@town");
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(@town));
            }
            if ((@phoneno == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(@phoneno));
            }
            if ((@leagueno == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(@leagueno));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int @playerno, 
                    string @name, 
                    string @initials, 
                    global::System.Nullable<global::System.DateTime> @birth_date, 
                    string @sex, 
                    short @joined, 
                    string @street, 
                    string @houseno, 
                    string @postcode, 
                    string @town, 
                    string @phoneno, 
                    string @leagueno, 
                    int @Original_playerno, 
                    string @Original_name, 
                    string @Original_initials, 
                    global::System.Nullable<global::System.DateTime> @Original_birth_date, 
                    string @Original_sex, 
                    short @Original_joined, 
                    string @Original_street, 
                    string @Original_houseno, 
                    string @Original_postcode, 
                    string @Original_town, 
                    string @Original_phoneno, 
                    string @Original_leagueno) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@playerno));
            if ((@name == null)) {
                throw new global::System.ArgumentNullException("@name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(@name));
            }
            if ((@initials == null)) {
                throw new global::System.ArgumentNullException("@initials");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@initials));
            }
            if ((@birth_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(@birth_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((@sex == null)) {
                throw new global::System.ArgumentNullException("@sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(@sex));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((short)(@joined));
            if ((@street == null)) {
                throw new global::System.ArgumentNullException("@street");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(@street));
            }
            if ((@houseno == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(@houseno));
            }
            if ((@postcode == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(@postcode));
            }
            if ((@town == null)) {
                throw new global::System.ArgumentNullException("@town");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(@town));
            }
            if ((@phoneno == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(@phoneno));
            }
            if ((@leagueno == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(@leagueno));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(@Original_playerno));
            if ((@Original_name == null)) {
                throw new global::System.ArgumentNullException("@Original_name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(@Original_name));
            }
            if ((@Original_initials == null)) {
                throw new global::System.ArgumentNullException("@Original_initials");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(@Original_initials));
            }
            if ((@Original_birth_date.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(@Original_birth_date.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((@Original_sex == null)) {
                throw new global::System.ArgumentNullException("@Original_sex");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(@Original_sex));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((short)(@Original_joined));
            if ((@Original_street == null)) {
                throw new global::System.ArgumentNullException("@Original_street");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(@Original_street));
            }
            if ((@Original_houseno == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(@Original_houseno));
            }
            if ((@Original_postcode == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(@Original_postcode));
            }
            if ((@Original_town == null)) {
                throw new global::System.ArgumentNullException("@Original_town");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(@Original_town));
            }
            if ((@Original_phoneno == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(@Original_phoneno));
            }
            if ((@Original_leagueno == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(@Original_leagueno));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string @name, 
                    string @initials, 
                    global::System.Nullable<global::System.DateTime> @birth_date, 
                    string @sex, 
                    short @joined, 
                    string @street, 
                    string @houseno, 
                    string @postcode, 
                    string @town, 
                    string @phoneno, 
                    string @leagueno, 
                    int @Original_playerno, 
                    string @Original_name, 
                    string @Original_initials, 
                    global::System.Nullable<global::System.DateTime> @Original_birth_date, 
                    string @Original_sex, 
                    short @Original_joined, 
                    string @Original_street, 
                    string @Original_houseno, 
                    string @Original_postcode, 
                    string @Original_town, 
                    string @Original_phoneno, 
                    string @Original_leagueno) {
            return this.Update(@Original_playerno, @name, @initials, @birth_date, @sex, @joined, @street, @houseno, @postcode, @town, @phoneno, @leagueno, @Original_playerno, @Original_name, @Original_initials, @Original_birth_date, @Original_sex, @Original_joined, @Original_street, @Original_houseno, @Original_postcode, @Original_town, @Original_phoneno, @Original_leagueno);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class teamsTableAdapter : global::System.ComponentModel.Component {
        
        private global::Npgsql.NpgsqlDataAdapter _adapter;
        
        private global::Npgsql.NpgsqlConnection _connection;
        
        private global::Npgsql.NpgsqlTransaction _transaction;
        
        private global::Npgsql.NpgsqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public teamsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Npgsql.NpgsqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Npgsql.NpgsqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Npgsql.NpgsqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Npgsql.NpgsqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Npgsql.NpgsqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "teams";
            tableMapping.ColumnMappings.Add("teamno", "teamno");
            tableMapping.ColumnMappings.Add("playerno", "playerno");
            tableMapping.ColumnMappings.Add("division", "division");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"projetoscti\".\"public\".\"teams\" WHERE ((\"teamno\" = @Original_teamno) A" +
                "ND (\"playerno\" = @Original_playerno) AND (\"division\" = @Original_division))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Npgsql.NpgsqlParameter param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_division";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "division";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"projetoscti\".\"public\".\"teams\" (\"teamno\", \"playerno\", \"division\") VAL" +
                "UES (@teamno, @playerno, @division)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@division";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "division";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Npgsql.NpgsqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"projetoscti\".\"public\".\"teams\" SET \"teamno\" = @teamno, \"playerno\" = @playe" +
                "rno, \"division\" = @division WHERE ((\"teamno\" = @Original_teamno) AND (\"playerno\"" +
                " = @Original_playerno) AND (\"division\" = @Original_division))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@division";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "division";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_teamno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "teamno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_playerno";
            param.DbType = global::System.Data.DbType.Int32;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Integer;
            param.IsNullable = true;
            param.SourceColumn = "playerno";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Npgsql.NpgsqlParameter();
            param.ParameterName = "@Original_division";
            param.DbType = global::System.Data.DbType.String;
            param.NpgsqlDbType = global::NpgsqlTypes.NpgsqlDbType.Char;
            param.IsNullable = true;
            param.SourceColumn = "division";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Npgsql.NpgsqlConnection();
            this._connection.ConnectionString = global::CelularCTI.Desktop.Properties.Settings.Default.projetosctiConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Npgsql.NpgsqlCommand[1];
            this._commandCollection[0] = new global::Npgsql.NpgsqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT \"teamno\", \"playerno\", \"division\" FROM \"public\".\"teams\"";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(projetosctiDataSet.teamsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual projetosctiDataSet.teamsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            projetosctiDataSet.teamsDataTable dataTable = new projetosctiDataSet.teamsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet.teamsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(projetosctiDataSet dataSet) {
            return this.Adapter.Update(dataSet, "teams");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int @Original_teamno, int @Original_playerno, string @Original_division) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(@Original_teamno));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(@Original_playerno));
            if ((@Original_division == null)) {
                throw new global::System.ArgumentNullException("@Original_division");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(@Original_division));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int @teamno, int @playerno, string @division) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(@teamno));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(@playerno));
            if ((@division == null)) {
                throw new global::System.ArgumentNullException("@division");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(@division));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @teamno, int @playerno, string @division, int @Original_teamno, int @Original_playerno, string @Original_division) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(@teamno));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(@playerno));
            if ((@division == null)) {
                throw new global::System.ArgumentNullException("@division");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(@division));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(@Original_teamno));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(@Original_playerno));
            if ((@Original_division == null)) {
                throw new global::System.ArgumentNullException("@Original_division");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(@Original_division));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int @playerno, string @division, int @Original_teamno, int @Original_playerno, string @Original_division) {
            return this.Update(@Original_teamno, @playerno, @division, @Original_teamno, @Original_playerno, @Original_division);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private aparelhoTableAdapter _aparelhoTableAdapter;
        
        private clienteTableAdapter _clienteTableAdapter;
        
        private committee_membersTableAdapter _committee_membersTableAdapter;
        
        private fabricanteTableAdapter _fabricanteTableAdapter;
        
        private matchesTableAdapter _matchesTableAdapter;
        
        private pedidoTableAdapter _pedidoTableAdapter;
        
        private penaltiesTableAdapter _penaltiesTableAdapter;
        
        private playersTableAdapter _playersTableAdapter;
        
        private teamsTableAdapter _teamsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public aparelhoTableAdapter aparelhoTableAdapter {
            get {
                return this._aparelhoTableAdapter;
            }
            set {
                this._aparelhoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public clienteTableAdapter clienteTableAdapter {
            get {
                return this._clienteTableAdapter;
            }
            set {
                this._clienteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public committee_membersTableAdapter committee_membersTableAdapter {
            get {
                return this._committee_membersTableAdapter;
            }
            set {
                this._committee_membersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public fabricanteTableAdapter fabricanteTableAdapter {
            get {
                return this._fabricanteTableAdapter;
            }
            set {
                this._fabricanteTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public matchesTableAdapter matchesTableAdapter {
            get {
                return this._matchesTableAdapter;
            }
            set {
                this._matchesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public pedidoTableAdapter pedidoTableAdapter {
            get {
                return this._pedidoTableAdapter;
            }
            set {
                this._pedidoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public penaltiesTableAdapter penaltiesTableAdapter {
            get {
                return this._penaltiesTableAdapter;
            }
            set {
                this._penaltiesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public playersTableAdapter playersTableAdapter {
            get {
                return this._playersTableAdapter;
            }
            set {
                this._playersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public teamsTableAdapter teamsTableAdapter {
            get {
                return this._teamsTableAdapter;
            }
            set {
                this._teamsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._aparelhoTableAdapter != null) 
                            && (this._aparelhoTableAdapter.Connection != null))) {
                    return this._aparelhoTableAdapter.Connection;
                }
                if (((this._clienteTableAdapter != null) 
                            && (this._clienteTableAdapter.Connection != null))) {
                    return this._clienteTableAdapter.Connection;
                }
                if (((this._committee_membersTableAdapter != null) 
                            && (this._committee_membersTableAdapter.Connection != null))) {
                    return this._committee_membersTableAdapter.Connection;
                }
                if (((this._fabricanteTableAdapter != null) 
                            && (this._fabricanteTableAdapter.Connection != null))) {
                    return this._fabricanteTableAdapter.Connection;
                }
                if (((this._matchesTableAdapter != null) 
                            && (this._matchesTableAdapter.Connection != null))) {
                    return this._matchesTableAdapter.Connection;
                }
                if (((this._pedidoTableAdapter != null) 
                            && (this._pedidoTableAdapter.Connection != null))) {
                    return this._pedidoTableAdapter.Connection;
                }
                if (((this._penaltiesTableAdapter != null) 
                            && (this._penaltiesTableAdapter.Connection != null))) {
                    return this._penaltiesTableAdapter.Connection;
                }
                if (((this._playersTableAdapter != null) 
                            && (this._playersTableAdapter.Connection != null))) {
                    return this._playersTableAdapter.Connection;
                }
                if (((this._teamsTableAdapter != null) 
                            && (this._teamsTableAdapter.Connection != null))) {
                    return this._teamsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._aparelhoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._clienteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._committee_membersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._fabricanteTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._matchesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._pedidoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._penaltiesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._playersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._teamsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(projetosctiDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aparelhoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.aparelho.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._aparelhoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.cliente.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._committee_membersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.committee_members.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._committee_membersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._fabricanteTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.fabricante.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._fabricanteTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._matchesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.matches.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._matchesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._pedidoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.pedido.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._pedidoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._penaltiesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.penalties.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._penaltiesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._playersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.players.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._playersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._teamsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.teams.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._teamsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(projetosctiDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._aparelhoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.aparelho.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._aparelhoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.cliente.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._committee_membersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.committee_members.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._committee_membersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._fabricanteTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.fabricante.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._fabricanteTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._matchesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.matches.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._matchesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._pedidoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.pedido.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._pedidoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._penaltiesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.penalties.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._penaltiesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._playersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.players.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._playersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._teamsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.teams.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._teamsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(projetosctiDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._teamsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.teams.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._teamsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._playersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.players.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._playersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._penaltiesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.penalties.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._penaltiesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._pedidoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.pedido.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._pedidoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._matchesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.matches.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._matchesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._fabricanteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.fabricante.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._fabricanteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._committee_membersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.committee_members.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._committee_membersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._clienteTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.cliente.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._clienteTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._aparelhoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.aparelho.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._aparelhoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(projetosctiDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._aparelhoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._aparelhoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._clienteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._clienteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._committee_membersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._committee_membersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._fabricanteTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._fabricanteTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._matchesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._matchesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._pedidoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._pedidoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._penaltiesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._penaltiesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._playersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._playersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._teamsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._teamsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._aparelhoTableAdapter != null)) {
                    revertConnections.Add(this._aparelhoTableAdapter, this._aparelhoTableAdapter.Connection);
                    this._aparelhoTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._aparelhoTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._aparelhoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._aparelhoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._aparelhoTableAdapter.Adapter);
                    }
                }
                if ((this._clienteTableAdapter != null)) {
                    revertConnections.Add(this._clienteTableAdapter, this._clienteTableAdapter.Connection);
                    this._clienteTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._clienteTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._clienteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._clienteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._clienteTableAdapter.Adapter);
                    }
                }
                if ((this._committee_membersTableAdapter != null)) {
                    revertConnections.Add(this._committee_membersTableAdapter, this._committee_membersTableAdapter.Connection);
                    this._committee_membersTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._committee_membersTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._committee_membersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._committee_membersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._committee_membersTableAdapter.Adapter);
                    }
                }
                if ((this._fabricanteTableAdapter != null)) {
                    revertConnections.Add(this._fabricanteTableAdapter, this._fabricanteTableAdapter.Connection);
                    this._fabricanteTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._fabricanteTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._fabricanteTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._fabricanteTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._fabricanteTableAdapter.Adapter);
                    }
                }
                if ((this._matchesTableAdapter != null)) {
                    revertConnections.Add(this._matchesTableAdapter, this._matchesTableAdapter.Connection);
                    this._matchesTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._matchesTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._matchesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._matchesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._matchesTableAdapter.Adapter);
                    }
                }
                if ((this._pedidoTableAdapter != null)) {
                    revertConnections.Add(this._pedidoTableAdapter, this._pedidoTableAdapter.Connection);
                    this._pedidoTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._pedidoTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._pedidoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._pedidoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._pedidoTableAdapter.Adapter);
                    }
                }
                if ((this._penaltiesTableAdapter != null)) {
                    revertConnections.Add(this._penaltiesTableAdapter, this._penaltiesTableAdapter.Connection);
                    this._penaltiesTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._penaltiesTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._penaltiesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._penaltiesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._penaltiesTableAdapter.Adapter);
                    }
                }
                if ((this._playersTableAdapter != null)) {
                    revertConnections.Add(this._playersTableAdapter, this._playersTableAdapter.Connection);
                    this._playersTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._playersTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._playersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._playersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._playersTableAdapter.Adapter);
                    }
                }
                if ((this._teamsTableAdapter != null)) {
                    revertConnections.Add(this._teamsTableAdapter, this._teamsTableAdapter.Connection);
                    this._teamsTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(workConnection));
                    this._teamsTableAdapter.Transaction = ((global::Npgsql.NpgsqlTransaction)(workTransaction));
                    if (this._teamsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._teamsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._teamsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._aparelhoTableAdapter != null)) {
                    this._aparelhoTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._aparelhoTableAdapter]));
                    this._aparelhoTableAdapter.Transaction = null;
                }
                if ((this._clienteTableAdapter != null)) {
                    this._clienteTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._clienteTableAdapter]));
                    this._clienteTableAdapter.Transaction = null;
                }
                if ((this._committee_membersTableAdapter != null)) {
                    this._committee_membersTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._committee_membersTableAdapter]));
                    this._committee_membersTableAdapter.Transaction = null;
                }
                if ((this._fabricanteTableAdapter != null)) {
                    this._fabricanteTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._fabricanteTableAdapter]));
                    this._fabricanteTableAdapter.Transaction = null;
                }
                if ((this._matchesTableAdapter != null)) {
                    this._matchesTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._matchesTableAdapter]));
                    this._matchesTableAdapter.Transaction = null;
                }
                if ((this._pedidoTableAdapter != null)) {
                    this._pedidoTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._pedidoTableAdapter]));
                    this._pedidoTableAdapter.Transaction = null;
                }
                if ((this._penaltiesTableAdapter != null)) {
                    this._penaltiesTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._penaltiesTableAdapter]));
                    this._penaltiesTableAdapter.Transaction = null;
                }
                if ((this._playersTableAdapter != null)) {
                    this._playersTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._playersTableAdapter]));
                    this._playersTableAdapter.Transaction = null;
                }
                if ((this._teamsTableAdapter != null)) {
                    this._teamsTableAdapter.Connection = ((global::Npgsql.NpgsqlConnection)(revertConnections[this._teamsTableAdapter]));
                    this._teamsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591